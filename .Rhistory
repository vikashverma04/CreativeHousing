load("C:/Users/vikash/Desktop/DSA/Hack/.RData")
summary(fl_data)
boxplot(fl_data$bedrooms)
write.csv(fl_data, 'fl_data.csv')
write.csv(fl_data, 'fl_data.csv')
nrow(fl_data)
write.csv(fl_data, 'fl_data.csv')
write.csv(fl_data, 'fl_data_2.csv')
skewness(completeData$bedrooms)
library(VIM)
library(mice)
library(missForest)
# Factor Analysis lib
library(psych)
library(psy)
library(GPArotation)
library(stats)
library(FactoMineR)
# regression libs
library(Metrics)
library(lattice)
library(corpcor)
library(ggplot2)
library(car)
library(moments)
skewness(completeData$floors)
skewness(completeData$sqft_lot)
skewness(completeData$sqft_above)
skewness(completeData$sqft_basement)
hist(completeData$sqft_lot)
transformed_data <- acompleteData
vars = c("sqft_lot", "sqft_above", "sqft_basement")
for (i in vars){
transformed_data[,i] <- log(transformed_data[,i])
}
# Treat skewness (logrithmic transform)
transformed_data <- completeData
vars = c("sqft_lot", "sqft_above", "sqft_basement")
for (i in vars){
transformed_data[,i] <- log(transformed_data[,i])
}
skewness(transformed_data$sqft_lot)
skewness(transformed_data$sqft_above)
skewness(transformed_data$sqft_basement
skewness(transformed_data$sqft_basement)
skewness(transformed_data$sqft_basement)
skewness(transformed_data$sqft_lot)
skewness(transformed_data$sqft_above)
skewness(transformed_data$sqft_basement)
log(0)
skewness(completeData$sqft_basement)
# Treat skewness (logrithmic transform)
transformed_data <- completeData
plot(completeData$sqft_lot, sigmoid(completeData$sqft_lot), col='blue')
sigmoid = function(x) {
1 / (1 + exp(-x))
}
plot(completeData$sqft_lot, sigmoid(completeData$sqft_lot), col='blue')
plot(completeData$sqft_basement, sigmoid(completeData$sqft_basement), col='blue')
transformed_data$sqft_basement <- transformed_data$sqft_basement + 1
transformed_data <- completeData
transformed_data$sqft_basement <- transformed_data$sqft_basement + 1
vars = c("sqft_lot", "sqft_above", "sqft_basement")
for (i in vars){
transformed_data[,i] <- log(transformed_data[,i])
}
skewness(transformed_data$sqft_lot)
skewness(transformed_data$sqft_above)
skewness(transformed_data$sqft_basement)
transformed_data <- completeData
transformed_data$sqft_lot <- transformed_data$sqft_lot ** 1/2
skewness(transformed_data$sqft_lot)
transformed_data <- completeData
transformed_data$sqft_lot <- transformed_data$sqft_lot ** 1/3
skewness(transformed_data$sqft_lot)
transformed_data <- completeData
transformed_data$sqft_lot <- log(transformed_data$sqft_lot)
skewness(transformed_data$sqft_lot)
transformed_data <- completeData
transformed_data$sqft_lot <- log2(transformed_data$sqft_lot)
skewness(transformed_data$sqft_lot)
transformed_data <- completeData
transformed_data$sqft_lot <- log10(transformed_data$sqft_lot)
skewness(transformed_data$sqft_lot)
transformed_data$sqft_lot <- tanh(transformed_data$sqft_lot)
transformed_data <- completeData
transformed_data$sqft_lot <- tanh(transformed_data$sqft_lot)
skewness(transformed_data$sqft_lot)
transformed_data <- completeData
transformed_data$sqft_lot.describe()
summary(transformed_data$sqft_lot)
boxplot(transformed_data$sqft_lot)
# Missing data imputation libraries
library(VIM)
library(mice)
library(missForest)
# Factor Analysis lib
library(psych)
library(psy)
library(GPArotation)
library(stats)
library(FactoMineR)
# regression libs
library(Metrics)
library(lattice)
library(corpcor)
library(ggplot2)
library(car)
library(moments)
setwd('C:\\Users\\vikash\\Desktop\\DSA\\Hack')
fl_data <- read.csv("1522419498_DSA_Hackathon_Dataset.csv")
#Remove id
# sqft living= sqft above + sqft base (remove sqft living)
# condition or grade --> for new houses no need of grade --> remove grade
#drops <- c("id", "zipcode", "yr_renovated", "sqft_basement")
drops <- c("id", "sqft_living", "grade")
fl_data <- fl_data[ , !(names(fl_data) %in% drops)]
nrow(fl_data)  #19999
# Bedroom, bathroom, Make 0 to  NA
fl_data$bathrooms <- ifelse(fl_data$bathrooms==0, NA, fl_data$bathrooms)
fl_data$bedrooms <- ifelse(fl_data$bedrooms==0, NA, fl_data$bedrooms)
# Create a temp csv file
write.csv(fl_data, 'non_na.csv')
fl_data$yr_renovated <- ifelse(fl_data$yr_renovated==0, fl_data$yr_built, fl_data$yr_renovated)
fl_data$yr_built = 2019 - fl_data$yr_built
fl_data$yr_renovated = 2019 - fl_data$yr_renovated
fl_data = fl_data[complete.cases(fl_data[ , 3:4]),]
nrow(fl_data)
#fl_data_1 <- transform(fl_data, zip_freq = ave(seq(nrow(fl_data)), zipcode, FUN=length))
fl_data$zipcode <- factor(fl_data$zipcode)
levels(fl_data$zipcode)
summary(fl_data)
write.csv(fl_data, 'fl_data.csv')
fl_data$bedrooms <- ifelse(fl_data$bedrooms>7, NA, fl_data$bedrooms)
fl_data$bedrooms <- ifelse(fl_data$bedrooms==1 & fl_data$bathrooms>1, fl_data$bedrooms+1, fl_data$bedrooms)
write.csv(fl_data, 'fl_data.csv')
md.pattern(fl_data)
#plot missing value pattern
mice_plot <- aggr(fl_data, col=c('grey','red'),numbers=TRUE, sortVars=TRUE,labels=names(fl_data), cex.axis=.7,
gap=3, ylab=c("Missing data","Pattern"))
#Start MICE imputing
imputed_Data <- mice(fl_data, method = 'cart', m=3, maxit = 2)
summary(imputed_Data)
#Check complete data using one impute set
imputeData <- complete(imputed_Data,2)
summary(imputeData)
write.csv(imputeData, 'imputed_data.csv')
transformed_data <- imputeData
transformed_data$sqft_basement <- transformed_data$sqft_basement + 1
vars = c("price", "sqft_lot", "sqft_above", "sqft_basement")
for (i in vars){
transformed_data[,i] <- log(transformed_data[,i])
}
transformed_data$sqft_above_square <- transformed_data$sqft_above^2
transformed_data$sqft_basement_square <- transformed_data$sqft_basement^2
skewness(transformed_data$sqft_above_square)
skewness(transformed_data$sqft_basement_square)
skewness(transformed_data$sqft_above)
skewness(transformed_data$sqft_basement)
model_data3 <- transformed_data
train = sample(1:nrow(model_data3),nrow(model_data3)/3)
test = -train
training_data = model_data3[train,]
testing_data = model_data3[test,]
testing_price = model_data3$price[test]
model3<-lm(price~ .,data=training_data)
predicted_price <- predict(model3, testing_data)
summary(model3)
# Residuals vs Regressors
par(mfrow=c(2,2))
plot(model3)
#predicted_price = predict.lm(model,testing_data,type = 'response')
rmse(testing_price,predicted_price)
mape(testing_price,predicted_price)
residualPlots(model3)
summary(model3)
View(fl_data)
transformed_data <- imputeData
transformed_data <- imputeData
model_data <- transformed_data
set.seed(1221)
train = sample(1:nrow(model_data),nrow(model_data)/3)
test = -train
training_data = model_data[train,]
testing_data = model_data[test,]
testing_price = model_data$price[test]
model<-lm(price~ .,data=training_data)
predicted_price <- predict(model, testing_data)
summary(model)
# Residuals vs Regressors
par(mfrow=c(2,2))
plot(model)
#predicted_price = predict.lm(model,testing_data,type = 'response')
rmse(testing_price,predicted_price)
mape(testing_price,predicted_price)
